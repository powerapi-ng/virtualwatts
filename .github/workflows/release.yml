name: Release workflow

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - ci-migration
env:
  repository: https://github.com/powerapi-ng/virtualwatts
jobs:
  lint_and_test:
    name: Lint and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
      influx:
        image: influxdb:1.8
        ports:
          - 8086:8086
    steps:
      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y libvirt-dev procps
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Convert to python3.6 code
        if: ${{ matrix.python-version == 3.6 }}
        run: | 
          wget https://raw.githubusercontent.com/powerapi-ng/powerapi-ci-env/main/to_36.sh
          /bin/bash to_36.sh virtualwatts
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo pip install flake8 pylint
      - name: install powerapi
        if: ${{ matrix.python-version == 3.6 }}
        run: |
           VERSION=$(grep "powerapi " setup.cfg | cut -d = -f 2) 
           sudo pip install thespian 
           wget https://github.com/powerapi-ng/powerapi/releases/download/1.0.0/python3-powerapi_1.0.0-1_all.deb
           sudo dpkg -i python3-powerapi_1.0.0-1_all.deb || echo ok
           sudo apt install -f -y 
           sudo pip freeze 

      - name: install virtuallwatts
        run: | 
            sudo pip install .
      - name: Test with pytest
        run: |
          sudo python setup.py pytest
      - name: Lint with flake8
        if: ${{ matrix.python-version != 3.6 }}
        run: |
          sudo flake8 virtualwatts
      - name: Lint with pylint
        if: ${{ matrix.python-version != 3.6 }}
        run: |
          sudo pylint virtualwatts
  check_release:
    name: Check release and version correspondance
    runs-on: ubuntu-latest
    needs: lint_and_test
    outputs:
      version: ${{ steps.step2.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Check tag and package version
        id: step2
        run: |
          export GIT_TAG=$(echo $GITHUB_REF | sed -e 's/refs\/tags\/v//g')
          test $GIT_TAG ==  $(grep __version__ virtualwatts/__init__.py | cut -d \" -f 2)
          echo "::set-output name=version::$GIT_TAG"
  build_pypi:
    name: Push package on pypi
    runs-on: ubuntu-latest
    env:
      PYPI_PASS: ${{ secrets.PYPI_PASS }}
    needs: check_release
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environement
        run: pip install -U pip twine
      - name: Init .pypirc
        run: |
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = powerapi" >> ~/.pypirc
          echo -e "password = $PYPI_PASS" >> ~/.pypirc
      - name: Generate package
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python3 -m pip install wheel
          python3 setup.py sdist bdist_wheel
      - name: Upload to pypi
        run: twine upload dist/*
  build_and_push_to_dockerHub:
    name: Build and push docker image to DockerHub
    runs-on: ubuntu-latest
    needs: check_release
    steps:
      - uses: actions/checkout@v2
      - name: Check powerapi version in Dockerfiles
        run: |
          VERSION=$(grep "powerapi " setup.cfg | cut -d = -f 2)
          CPYTHON_VERSION=$(grep "FROM powerapi" Dockerfile-cpython | cut -d ":" -f 2)
          PYPY_VERSION=$(grep "FROM powerapi" Dockerfile-pypy | cut -d ":" -f 2 | cut -d "-" -f 2)
          test VERSION == CPYTHON_VERSION
          test VERSION == PYPY_VERSION
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Cpython image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: Dockerfile-cpython
          tags: powerapi/virtualwatts:latest, powerapi/virtualwatts:${{needs.check_release.outputs.version}}
      - name: Build and push pypy image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: Dockerfile-pypy
          tags: powerapi/virtualwatts-pypy:latest, powerapi/virtualwatts:pypy-${{needs.check_release.outputs.version}}
  build_deb_package:
    name: Build debian binary package
    runs-on: ubuntu-latest
    needs: check_release
    container:
      image: powerapi/powerapi-build-deb
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Remove tests
        run: |
          rm -R ./tests
          sed -i 's/setup_requires =//g' setup.cfg
          sed -i 's/pytest-runner >=3.9.2//g' setup.cfg
          sed -i 's/test = pytest//g' setup.cfg
          sed -i 's/\[aliases\]//g' setup.cfg
          sed -i 's/test_suite = tests//g' setup.cfg
          sed -i 's/tests_require =//g' setup.cfg
          sed -i 's/pytest >=3.9.2//g' setup.cfg
          sed -i 's/pytest-asyncio >=0.14.0//g' setup.cfg
          sed -i 's/requests >=2.0//g' setup.cfg
      - name: Convert to python3.6 code
        run: | 
          wget https://raw.githubusercontent.com/powerapi-ng/powerapi-ci-env/main/to_36.sh
          /bin/bash to_36.sh virtualwatts
      - name: Create source package
        run: |
          apt install -y python3-setuptools python3-stdeb python3-numpy
          mkdir package
          mv LICENSE README.md contributing.md virtualwatts setup.* package/
          tar czvf virtualwatts.tar.gz package
          py2dsc virtualwatts.tar.gz
          sed -i '/Depends: ${misc:Depends}, ${python3:Depends}/a Suggests: python3-libvirt,python3-pymongo,python3-prometheus-client,python3-influxdb' ./deb_dist/virtualwatts-${{needs.check_release.outputs.version}}/debian/control
      - name: Build binary package and upload it github release page
        env:
          VERSION: ${{needs.check_release.outputs.version}}
        run: |
          cd ./deb_dist/virtualwatts-$VERSION
          DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage
          mkdir -p ~/deb
          cp ../python3-virtualwatts_$VERSION-1_all.deb ~/deb/
          ls ~/deb/
      - uses: actions/upload-artifact@v2
        with:
          name: deb_package
          path: ~/deb/

  publish_release:
    name: Publish release on github
    runs-on: ubuntu-latest
    needs: [check_release, build_deb_package]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: deb_package
          path: ~/deb
      - name: Create pre-changelog
        id: pre-changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          preset: angular
          output-file: ~/pre-changelog.md
          release-count: 2
      - name: Create Changelog
        env:
          CHANGELOG_CONTENT: ${{ steps.changelog.outputs.clean_changelog }}
        run: |
          sudo apt install -y npm
          sudo npm install -g conventional-changelog-cli
          conventional-changelog -p angular -r 2 | grep -v "^# \[\]" | sed 's/^#//g' > ~/final-changelog.md
          cat ~/final-changelog.md
          cat ~/final-changelog.md >> CHANGELOG.md
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{needs.check_release.outputs.version}}
        run: gh release create $VERSION -d -t $VERSION -F ~/final-changelog.md ~/deb/*
